{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "sqlServerName": {
      "type": "string",
      "defaultValue": "[uniqueString(resourceGroup().id)]",
      "metadata": {
        "description": "The name of the Azure SQL server to create."
      }
    },
    "sqlServerAdministratorLogin": {
      "type": "string",
      "defaultValue": "MySqlAdminLoginNotSecure"
    },
    "sqlServerAdministratorPassword": {
      "type": "securestring",
      "defaultValue": "Test123!!!!!!"
    },
    "sqlDatabaseSkuName": {
      "type": "string",
      "defaultValue": "S0",
      "metadata": {
        "description": "The SKU name of the Azure SQL database to create."
      }
    },
    "sqlDatabaseName": {
      "type": "string",
      "defaultValue": "MyDatabase",
      "metadata": {
        "description": "The name of the Azure SQL database to create."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[uniqueString(resourceGroup().id)]",
      "metadata": {
        "description": "The name of the Azure Storage account to create, which will be used for storing metadata for the Azure Functions app. App name must be globally unique."
      }
    },
    "functionAppName": {
      "type": "string",
      "defaultValue": "[uniqueString(resourceGroup().id)]",
      "metadata": {
        "description": "The name of the Azure Functions app to create. The app name must be globally unique."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location of all resources."
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "The type of Azure Storage account to create for the Azure Functions host to use."
      }
    }
  },
  "variables": {
    "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
    "databaseEdition": "Basic",
    "databaseCollation": "SQL_Latin1_General_CP1_CI_AS",
    "databaseServiceObjectiveName": "Basic"
  },
  "resources": [
    // Storage account for function app
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountName')]",
      "apiVersion": "2019-04-01",
      "location": "[parameters('location')]",
      "kind": "StorageV2",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      }
    },

    // Azure SQL server and database
    {
      "name": "[parameters('sqlServerName')]",
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2014-04-01-preview",
      "location": "[parameters('location')]",
      "properties": {
        "administratorLogin": "[parameters('sqlServerAdministratorLogin')]",
        "administratorLoginPassword": "[parameters('sqlServerAdministratorPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "name": "[parameters('sqlDatabaseName')]",
          "type": "databases",
          "apiVersion": "2015-01-01",
          "location": "[parameters('location')]",
          "properties": {
            "edition": "[variables('databaseEdition')]",
            "collation": "[variables('databaseCollation')]",
            "requestedServiceObjectiveName": "[variables('databaseServiceObjectiveName')]"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
          ]
        },
        {
          "name": "AllowAllMicrosoftAzureIps",
          "type": "firewallrules",
          "apiVersion": "2014-04-01",
          "location": "[parameters('location')]",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
          ]
        }
      ]
    },

    // Function app
    {
      "name": "[parameters('functionAppName')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2015-08-01",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "properties": {},
      "resources": [
        {
          "name": "appsettings",
          "type": "config",
          "apiVersion": "2018-11-01",
          "properties": {
            "AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
            "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
            "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
            "WEBSITE_CONTENTSHARE": "[toLower(parameters('functionAppName'))]",
            "FUNCTIONS_EXTENSION_VERSION": "~3",
            "FUNCTIONS_WORKER_RUNTIME": "PowerShell",
            "SqlConnectionString": "[concat('Data Source=', reference(resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))).fullyQualifiedDomainName, ';Initial Catalog=', parameters('sqlDatabaseName'), ';Integrated Security=False;User Id=', parameters('sqlServerAdministratorLogin'), ';Password=', parameters('sqlServerAdministratorPassword'))]"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
          ]
        }
      ],
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    }
  ],
  "outputs": {
    "functionsAppName": {
      "type": "string",
      "value": "[parameters('functionAppName')]"
    }
  }
}